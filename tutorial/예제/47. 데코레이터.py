
def f(x):
    print("함수 'f' 호출")

    # 내부 함수 'g'를 정의한다.
    def g(y):
        print("함수 'g' 호출")
        # 함수를 인자로 받았기 때문에 'function' 타입이 출력된다.
        print(x)
        print(type(x))

        # 인자값으로 받은 함수 'x'에 함수 'g'의 인자값 'y'를 넘긴다.
        return x(y)

    # 내부 함수 'g'를 반환시킨다.
    return g


# 함수 'f'를 데코레이터로 사용한다.
@f
def f2(x):
    print("함수 'f2' 호출")
    return x + 1

# 함수 'f2'를 호출하면 결과는 아래와 같이 출력된다.
# 함수 'f' 호출
# 함수 'g' 호출
# <function f2 at 0x.....>
# 함수 'f2' 호출
y = f2(10)

# 아래의 결과를 확인해보면 '11'이 출력되는데, 과정은 다음과 같다.
# 1. 함수 `f` 에 인자값으로 `x` 가 넘어가며, `x` 는 함수이다.
# 2. 내부 함수 `g` 에 인자값으로 받은 함수 `x` 가 넘어간다.
# 3. 내부 함수 `g` 에서 인자값으로 넘긴 함수 `x` 에 내부 함수 `g` 의 인자값 `y` 를 넘긴다.
# 4. 내부 함수 `g` 는 최종적으로 인자값으로 넘긴 함수 `x` 를 실행시킨 결과값을 반환시킨다.
# 5. 결과적으로, 함수 `f` 는 위의 과정을 거쳐 만들어진 내부 함수 `g` 를 반환한다.
# 6. 함수 `f` 가 호출된다.
# 7. 함수 `f` 의 인자값 `x` 로 `f2` 가 넘어간다.
# 8. 내부 함수 `g` 에서 인자값으로 받은 함수 `f2` 에 인자값 `y` 를 넘기면서 함수 `f2` 를 호출시킨 후, 그 결과값을 반환되도록 만들어진다.
# 9. 이렇게 만들어진 내부 함수 `g` 를 반환한다.
# 10. 내부 함수 `g` 가 호출된다.
# 11. 최종적으로, 내부 함수 `g` 는 함수 `f2` 를 호출한다.
print(y)
